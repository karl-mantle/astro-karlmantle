---
import type { GetStaticPathsOptions, Page } from 'astro';
import type { CollectionEntry } from 'astro:content';
import type { Terms } from '~/types.ts';
import { getTerms, getEntriesByTag, getEntriesByCategory } from '~/utils/collections';
import Base from '~/layouts/Base.astro';
import PostCard from '~/components/collections/PostCard.astro';
import PostArchive from '~/components/collections/PostArchive.astro';
import Pagination from '~/components/ui/Pagination.astro';

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const terms: Terms[] = await getTerms('posts');
  let paths: any[] = [];

  for (const term of terms) {
    const { name, slug, type } = term;

    let entries;
    switch (type) {
      case 'category':
        entries = await getEntriesByCategory('posts', name);
        break;
      case 'tag':
        entries = await getEntriesByTag('posts', name);
        break;
      default:
        entries = await getEntriesByCategory('posts', name);
    };

    const paginatedTerms = paginate(entries, {
      params: { terms: `${type}/${slug}` },
      pageSize: 9
    });

    paginatedTerms.forEach((path) => {
      path.props = { ...path.props, term };
    });

    paths = paths.concat(paginatedTerms);
  };

  return paths;
};

const { page, term } = Astro.props as { page: Page<CollectionEntry<'posts'>>, term: Terms };

const entryCount = page.end + 1;
---

<Base
  title={ term.type === 'category' ? `“${term.name}” category archive` : `“${term.name}” tag archive` }
  description={ term.type === 'category' ? `View the archive of all posts in the category “${term.name}”.` : `View the archive of all posts tagged with “${term.name}”.` }
>
  <section class="container flex flex-col min-h-screen">

    <PostArchive
      description={`Now displaying ${entryCount} of ${page.total} posts.`}
      heading={ term.type === 'category' ? `All posts categorised as “${term.name}”` : `All posts tagged with “${term.name}”` }
    />

    <hr class="w-full h-[2px] border-none bg-neutral-600 mask-x-from-85% mb-4" />

    <div class="grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3">
      {page.data.map((post) =>
        <PostCard
          description={post.data.description}
          heading={post.data.title}
          image={post.data.image}
          href={`${Astro.site}blog/${post.data.slug}`}
        />
      )}
    </div>

    <Pagination
      page={page}
    />

  </section>
</Base>
