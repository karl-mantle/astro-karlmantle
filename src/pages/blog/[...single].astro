---
import { type CollectionEntry, getEntry, render } from 'astro:content';
import { slugify, getEntries } from '~/utils/collections';
import Base from '~/layouts/Base.astro';
import Button from '~/components/ui/Button.astro';
import Date from '~/components/ui/Date.astro';
import PostHero from '~/components/collections/PostHero.astro';
import TagList from '~/components/ui/TagList.astro';
import RelatedEntries from '~/components/collections/RelatedEntries.astro';
import ShareLinks from '~/components/ui/ShareLinks.astro';
import TableOfContents from '~/components/ui/TableOfContents.astro';

type Props = { 
  entry: CollectionEntry<'posts'>,
  prevEntry: CollectionEntry<'posts'>,
  nextEntry: CollectionEntry<'posts'>
};

export async function getStaticPaths() {
    const entries = await getEntries('posts');
    const entryCount = entries.length;
    return entries.map((entry, index) => ({
        params: { single: entry.data.slug },
        props: {
            entry,
            prevEntry: index + 1 < entryCount ? entries[index + 1] : null,
            nextEntry: index > 0 ? entries[index - 1] : null
        }
    }));
};

const { entry, prevEntry, nextEntry } = Astro.props;
const { Content, headings } = await render(entry);
const author =  await getEntry('author', entry.data.author.id);
const authorData = author?.data;
---

<Base
  authorData={authorData}
  description={entry.data.description}
  postData={entry.data}
  schemaType="Article"
  tableOfContents={headings.length > 0}
  title={entry.data.title}
>

  <div class="container flex flex-col gap-4 md:gap-8 mb-8">
    
    <TableOfContents headings={headings} />

    <article class="flex flex-col gap-4 md:gap-8 mb-8">
      <PostHero
        description={entry.data.description}
        heading={entry.data.title}
        image={entry.data.image}
      />

      {/* Post body */}
      <section class="prose prose-neutral prose-invert prose-lg font-serif max-w-[75ch]">
        <Content />
      </section>

      {/* Share links */}
      <footer class="not-prose flex flex-col gap-2">
        <hr class="w-full h-[2px] border-none bg-neutral-600 mask-x-from-85%" />

        <div class="flex justify-between">
          <ShareLinks description="Share this post:" display={['email', 'facebook', 'linkedin', 'whatsapp']} title={entry.data.title} url={Astro.url.toString()} />
    
          <nav class="hidden md:flex justify-center md:justify-between gap-4 pr-4">
            { prevEntry &&  (
              <Button buttonStyle="icon" href={`${Astro.site}blog/${prevEntry.data.slug}`} aria-label="previous post" icon="ri:arrow-left-s-line" iconSize={24} class="!rounded-4xl" />
            )}
            { nextEntry && (
              <Button buttonStyle="icon" href={`${Astro.site}blog/${nextEntry.data.slug}`} aria-label="next post" icon="ri:arrow-right-s-line" iconSize={24} class="!rounded-4xl" />
            )}
          </nav>
        </div>
      </footer>
    </article>

    {/* Post meta */}
    <section class="grid grid-cols-1 md:grid-cols-2 gap-2 md:gap-4 bg-neutral-800 p-4 -mx-4 md:rounded-xl">
      <div class="flex flex-col gap-2">
        <h2 class="text-xl font-medium">About this post</h2>
        <hr class="w-full h-[2px] border-none bg-neutral-600 mask-x-from-85%" />

        <h3 class="sr-only">Post details</h3>
        <p class="flex flex-wrap mt-2">
          Posted in the
          <Button
            buttonStyle="link"
            class="!p-0 mx-1"
            href={`${Astro.site}blog/category/${slugify(entry.data.category)}`}
            buttonText={entry.data.category}
          />
          category.
        </p>

        <div class="flex flex-col md:flex-row md:gap-4">
          <Date class="text-sm mt-2 mb-4" date={entry.data.pubDate} description="Post published on" />
          { entry.data.updatedDate && (
            <Date class="text-sm mt-2 mb-4" date={entry.data.updatedDate} description="Last updated on" />
          )}
        </div>
      </div>
      
      <div class="flex flex-col gap-2">
        <h3 class="text-xl font-medium">Tags</h3>
        <hr class="w-full h-[2px] border-none bg-neutral-600 mask-x-from-85%" />
        <TagList tags={entry.data.tags} permalink="blog/tag" class="mt-2 mb-4"/>
      </div>
    </section>

    {/* Related Posts */}
    <section class="relative flex flex-col gap-2">
      <h3 class="text-xl font-medium">Related posts</h3>

      <hr class="w-full h-[2px] border-none bg-neutral-600 mask-x-from-85% mb-2" />

      <RelatedEntries
        category={entry.data.category}
        contentCollection="posts"
        maxEntries={3}
      />
    </section>
  </div>
</Base>
