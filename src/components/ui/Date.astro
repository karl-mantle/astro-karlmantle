---
import type { DateOptions } from '~/types';
import { Icon } from 'astro-icon/components';

interface Props extends DateOptions {
  date: Date
};

const { date, description, hideDescription, hideIcon, class: className, ...rest }: Partial<Props> = Astro.props;

const ordinal = (day: number) => {
  const suffixSet = ['th', 'st', 'nd', 'rd'];
  if (day > 3 && day < 21) return suffixSet[0];
  switch (day % 10) {
    case 1: return suffixSet[1];
    case 2: return suffixSet[2];
    case 3: return suffixSet[3];
    default: return suffixSet[0];
  }
};

const day = date.getDate();
const month = date.toLocaleString('en-GB', { month: 'long' });
const year = date.getFullYear();

const formattedDate = `${day}${ordinal(day)} ${month} ${year}`;
---

<div class:list={['flex flex-col', !hideIcon ? 'gap-2' : '', className]} {...rest} >

  { !hideDescription && (
    <span class="font-medium">{description}</span>
  )}

  { (!hideIcon || !hideDescription) && (
  <div class="inline-flex gap-2">
    { !hideIcon && (
      <Icon name="ri:calendar-line" height={21} width={21} class="self-center"/>
    )}
    <time datetime={date.toISOString()} lang="en-GB">
      { hideDescription && (
        <span class="sr-only">{description}</span>
      )}
      {formattedDate}
    </time>
  </div>
  )}
</div>
